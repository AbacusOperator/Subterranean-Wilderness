buildscript
{
	repositories
	{
		maven { url = 'https://files.minecraftforge.net/maven' }
		jcenter()
		mavenCentral()
	}
	dependencies
	{
		classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
	}
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'

version = '1.0.1'
group = 'melonslise.subwild'
archivesBaseName = 'subwild'

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8'

minecraft
{
	mappings channel: 'snapshot', version: '20200514-1.15.1'
	accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
	runs
	{
		client
		{
			workingDirectory project.file('run')
			property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
			property 'forge.logging.console.level', 'debug'
			mods
			{
				subwild
				{
					source sourceSets.main
				}
			}
		}

		server
		{
			workingDirectory project.file('run')
			property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
			property 'forge.logging.console.level', 'debug'
			mods
			{
				subwild
				{
					source sourceSets.main
				}
			}
		}

		data
		{
			workingDirectory project.file('run')
			property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
			property 'forge.logging.console.level', 'debug'
			args '--mod', 'subwild', '--all', '--output', file('src/generated/resources/')
			mods
			{
				subwild
				{
					source sourceSets.main
				}
			}
		}
	}
}

dependencies
{
    minecraft 'net.minecraftforge:forge:1.15.2-31.2.0'
}

jar
{
	manifest
	{
		attributes
		(
			[
				"Specification-Title": "subwild",
				"Specification-Vendor": "melonslise",
				"Specification-Version": version,
				"Implementation-Title": archivesBaseName,
				"Implementation-Version": version,
				"Implementation-Vendor" :"melonslise",
				"Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
			]
		)
	}
}